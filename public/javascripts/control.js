// Generated by CoffeeScript 1.4.0
(function() {
  var Display, eventManager;

  Display = Backbone.Model.extend({
    initialize: function(id, options) {
      this.socket = options.socket;
      return this.bind("change", function(model) {
        console.log("change");
        console.log(model.toJSON());
        return this.socket.emit("controlShowDisplay", model.toJSON());
      });
    }
  });

  eventManager = {
    linkDisplayInputToModel: function(model, input) {
      return $(input).change(function(e) {
        var value;
        value = $(e.target).val();
        return model.set({
          'value': value
        });
      });
    }
  };

  $(document).ready(function() {
    var app, _log, _s_log;
    app = {};
    app.server = io.connect("/");
    console.log("Loading");
    _log = function(message) {
      return console.log(message);
    };
    _s_log = function(o) {
      console.log(JSON.stringify(o));
      return {
        welcome: "<h1>" + message + "</h1>",
        user: "<div #user>{{userName}}</div>"
      };
    };
    app.showDisplay = function(message) {
      var _this = this;
      _log(message);
      $("ul").empty();
      return $.each(message, function(key, val) {
        var input, li, model;
        input = $("<input type='text'></text>");
        model = new Display({
          id: key
        }, {
          socket: app.server
        });
        eventManager.linkDisplayInputToModel(model, input);
        li = $("<li>" + val + "</li>").append(input);
        return $("ul").append(li);
      });
    };
    app.server.on("connect", function() {
      return _log("Connected to the server" + arguments);
    });
    app.server.emit("controlRegister");
    app.server.on("showDisplayList", app.showDisplay);
    app.server.on("message", function(data) {
      return _log("Received message: " + data.message);
    });
    return window.app = app;
  });

}).call(this);
